import AsyncStorage from '@react-native-async-storage/async-storage';import { BASE_URL } from './config';
async function authHeaders(extra={}){ const token=await AsyncStorage.getItem('token'); return {'Content-Type':'application/json', ...(token?{'Authorization':`Bearer ${token}`}:{}) ,...extra};}
export async function apiGet(path){ const r=await fetch(`${BASE_URL}${path}`,{headers:await authHeaders()}); if(!r.ok) throw new Error(await r.text()); return r.json();}
export async function apiPost(path, body){ const r=await fetch(`${BASE_URL}${path}`,{method:'POST',headers:await authHeaders(),body:JSON.stringify(body)}); if(!r.ok) throw new Error(await r.text()); return r.json();}
export async function apiPatch(path, body){ const r=await fetch(`${BASE_URL}${path}`,{method:'PATCH',headers:await authHeaders(),body:JSON.stringify(body)}); if(!r.ok) throw new Error(await r.text()); return r.json();}
export async function apiDelete(path){ const r=await fetch(`${BASE_URL}${path}`,{method:'DELETE',headers:await authHeaders()}); if(!r.ok) throw new Error(await r.text()); return r.json();}
export async function apiUploadPost({title,content,lat,lng,files=[]}){ const token=await AsyncStorage.getItem('token'); const fd=new FormData(); if(title) fd.append('title',title); if(content) fd.append('content',content); if(lat!=null) fd.append('lat',String(lat)); if(lng!=null) fd.append('lng',String(lng)); files.forEach(f=>fd.append('attachments',f)); const r=await fetch(`${BASE_URL}/posts`,{method:'POST',headers:{Authorization:token?`Bearer ${token}`:''},body:fd}); if(!r.ok) throw new Error(await r.text()); return r.json();}
export async function imageSource(url){ const token=await AsyncStorage.getItem('token'); return { uri:url, headers: token?{Authorization:`Bearer ${token}`}:{} };}